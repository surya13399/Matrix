{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\oic\\\\matrix\\\\src\\\\demo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useEffect } from \"react\"; // Material-ui imports\n\nimport { fade, withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"60%\",\n    padding: \"5px 6px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:focus\": {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\n_c = BootstrapInput;\nexport default function DataTabelVariable(props) {\n  _s();\n\n  // Table\n  const classes = useStyles();\n  const [rowValue, setRowValue] = useState(0);\n  const [columnsValue, setColumnsValue] = useState(0);\n  const [tableCellsData, setTableCellsData] = useState();\n  const [tableArrayData] = useState([[]]);\n  const [tableDictData] = useState([{}]); // const header_row = [];\n\n  const ref = useRef(null);\n\n  const getUniqueKeyFromArrayIndex = (rowNum, columnNum) => {\n    return `${rowNum}-${columnNum}`;\n  };\n\n  const onChangeHandler = e => {\n    setTableCellsData({ ...tableCellsData,\n      [e.target.name]: e.target.value\n    });\n    let [row, col] = e.target.name.split(\"-\");\n    row = parseInt(row, 10);\n    col = parseInt(col, 10);\n\n    if (!tableArrayData[row]) {\n      tableArrayData[row] = [];\n      tableArrayData[row].push([]);\n    }\n\n    tableArrayData[row][col] = e.target.value;\n  };\n\n  useEffect(() => {\n    // console.log(tableArrayData.length);\n    // console.log(tableArrayData[0]);\n    // console.log(tableDictData);\n    console.log(tableDictData);\n  }, [tableCellsData]);\n\n  const generateTable = () => {\n    let table = []; // Outer loop to create parent\n\n    let rowVariable = 1;\n    rowVariable = rowValue + rowVariable; // console.log(rowVariable)\n\n    for (let i = 1; i < rowVariable; i++) {\n      let children = []; //Inner loop to create children\n\n      for (let j = 0; j < columnsValue; j++) {\n        children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: rowVariable === 1 ? /*#__PURE__*/_jsxDEV(BootstrapInput, {\n            placeholder: \"header_value\",\n            name: getUniqueKeyFromArrayIndex(i, j),\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BootstrapInput, {\n            placeholder: \"\",\n            name: getUniqueKeyFromArrayIndex(i, j),\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this));\n      }\n\n      table.push( /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this));\n    }\n\n    return table;\n  }; // const handleSubmit = () => {\n  //   let header = tableArrayData[0];\n  //   // go through cells\n  //   for (var i = 1; i < tableArrayData.length; i++) {\n  //     var tableRow = tableArrayData[i];\n  //     var rowData = {};\n  //     for (var j = 0; j < tableRow.length; j++) {\n  //       if (tableRow.length === header.length) {\n  //         rowData[header[j]] = tableRow[j];\n  //       }\n  //     }\n  //     tableDictData.push(rowData);\n  //   }\n  //   console.log(tableDictData);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Select Row number and Columns number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowColumnsNumber\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"Row-number\",\n          label: \"Row(s)\",\n          type: \"number\",\n          InputLabelProps: {\n            shrink: true\n          },\n          inputProps: {\n            min: \"0\",\n            max: \"1000\",\n            step: \"1\"\n          },\n          onChange: e => setRowValue(parseInt(e.target.value, 10)),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"Columns-number\",\n          label: \"Columns(s)\",\n          type: \"number\",\n          inputProps: {\n            min: \"0\",\n            max: \"1000\",\n            step: \"1\"\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          onChange: e => setColumnsValue(parseInt(e.target.value, 10)),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TableContainer\",\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-label\": \"simple table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              ref: ref,\n              children: generateTable()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataTabelVariable, \"I+CpultBtYt7lqs7ZJtsR2F5xrs=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DataTabelVariable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapInput\");\n$RefreshReg$(_c2, \"DataTabelVariable\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/oic/matrix/src/demo.js"],"names":["React","Fragment","useState","useRef","useEffect","fade","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableRow","Paper","InputBase","TextField","useStyles","table","minWidth","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","boxShadow","primary","main","borderColor","DataTabelVariable","props","classes","rowValue","setRowValue","columnsValue","setColumnsValue","tableCellsData","setTableCellsData","tableArrayData","tableDictData","ref","getUniqueKeyFromArrayIndex","rowNum","columnNum","onChangeHandler","e","target","name","value","row","col","split","parseInt","push","console","log","generateTable","rowVariable","i","children","j","shrink","min","max","step"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\n// Material-ui imports\r\nimport { fade, withStyles } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./styles.css\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"60%\",\r\n    padding: \"5px 6px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  }\r\n}))(InputBase);\r\n\r\nexport default function DataTabelVariable(props) {\r\n  // Table\r\n  const classes = useStyles();\r\n  const [rowValue, setRowValue] = useState(0);\r\n  const [columnsValue, setColumnsValue] = useState(0);\r\n  const [tableCellsData, setTableCellsData] = useState();\r\n  const [tableArrayData] = useState([[]]);\r\n  const [tableDictData] = useState([{}]);\r\n  // const header_row = [];\r\n  const ref = useRef(null);\r\n\r\n  const getUniqueKeyFromArrayIndex = (rowNum, columnNum) => {\r\n    return `${rowNum}-${columnNum}`;\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    setTableCellsData({\r\n      ...tableCellsData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n    let [row, col] = e.target.name.split(\"-\");\r\n    row = parseInt(row, 10);\r\n    col = parseInt(col, 10);\r\n\r\n    if (!tableArrayData[row]) {\r\n      tableArrayData[row] = [];\r\n      tableArrayData[row].push([]);\r\n    }\r\n\r\n    tableArrayData[row][col] = e.target.value;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(tableArrayData.length);\r\n    // console.log(tableArrayData[0]);\r\n    // console.log(tableDictData);\r\n    console.log(tableDictData);\r\n  }, [tableCellsData]);\r\n\r\n  const generateTable = () => {\r\n    let table = [];\r\n    // Outer loop to create parent\r\n    let rowVariable = 1;\r\n    rowVariable = rowValue + rowVariable;\r\n    // console.log(rowVariable)\r\n    for (let i = 1; i < rowVariable; i++) {\r\n      let children = [];\r\n      //Inner loop to create children\r\n      for (let j = 0; j < columnsValue; j++) {\r\n        children.push(\r\n          <td>\r\n            {rowVariable === 1 ? (\r\n              <BootstrapInput\r\n                placeholder=\"header_value\"\r\n                name={getUniqueKeyFromArrayIndex(i, j)}\r\n                onChange={onChangeHandler}\r\n              />\r\n            ) : (\r\n              <BootstrapInput\r\n                placeholder=\"\"\r\n                name={getUniqueKeyFromArrayIndex(i, j)}\r\n                onChange={onChangeHandler}\r\n              />\r\n            )}\r\n          </td>\r\n        );\r\n      }\r\n      table.push(\r\n        <TableRow key={i}>\r\n          <TableCell>{children}</TableCell>\r\n        </TableRow>\r\n      );\r\n    }\r\n    return table;\r\n  };\r\n\r\n  // const handleSubmit = () => {\r\n  //   let header = tableArrayData[0];\r\n  //   // go through cells\r\n  //   for (var i = 1; i < tableArrayData.length; i++) {\r\n  //     var tableRow = tableArrayData[i];\r\n  //     var rowData = {};\r\n\r\n  //     for (var j = 0; j < tableRow.length; j++) {\r\n  //       if (tableRow.length === header.length) {\r\n  //         rowData[header[j]] = tableRow[j];\r\n  //       }\r\n  //     }\r\n\r\n  //     tableDictData.push(rowData);\r\n  //   }\r\n  //   console.log(tableDictData);\r\n  // };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"main\">\r\n        <h5>Select Row number and Columns number</h5>\r\n        <div className={\"rowColumnsNumber\"} style={{ marginTop: 20 }} >\r\n          <TextField\r\n            id=\"Row-number\"\r\n            label=\"Row(s)\"\r\n            type=\"number\"\r\n            InputLabelProps={{ shrink: true }}\r\n            inputProps={{ min: \"0\", max: \"1000\", step: \"1\" }}\r\n            onChange={(e) => setRowValue(parseInt(e.target.value, 10))}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"Columns-number\"\r\n            label=\"Columns(s)\"\r\n            type=\"number\"\r\n            inputProps={{ min: \"0\", max: \"1000\", step: \"1\" }}\r\n            InputLabelProps={{ shrink: true }}\r\n            onChange={(e) => setColumnsValue(parseInt(e.target.value, 10))}\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className={\"TableContainer\"}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableBody ref={ref}>{generateTable()}</TableBody>\r\n              {/* <TableBody> {generateTable()}</TableBody> */}\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}